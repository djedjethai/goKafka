version: '2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
      #image: confluentinc/cp-zookeeper:6.0.2-1-ubi8
      # image: confluentinc/cp-zookeeper:6.2.2
    hostname: zookeeper
    container_name: zookeeper
    user: root
      # pull_policy: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./kafka/zk-data:/var/lib/zookeeper/data
      - ./kafka/zk-logs:/var/lib/zookeeper/log  
 
  kafka:
    image: confluentinc/cp-server:7.0.1
      # image: confluentinc/cp-enterprise-kafka:6.2.2
    hostname: kafka
    container_name: kafka
    user: root
      #pull_policy: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: |
        PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: |
        PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1    
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 30s
      timeout: 10s
      retries: 4
    volumes:
      - ./kafka/kafka-data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry:7.1.0
    hostname: schema-registry
    container_name: schema-registry
    user: root
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: nc -z localhost 8081 || exit -1 
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 30s
    volumes:
      - ./kafka/registry:/etc/schema-registry
        #networks:
        #- integration-test-network


