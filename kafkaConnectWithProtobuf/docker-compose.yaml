version: '2'

# sudo docker-compose up > output.log

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
      #image: confluentinc/cp-zookeeper:6.0.2-1-ubi8
      # image: confluentinc/cp-zookeeper:6.2.2
    hostname: zookeeper
    container_name: zookeeper
    user: root
      # pull_policy: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./kafka/zk-data:/var/lib/zookeeper/data
      - ./kafka/zk-logs:/var/lib/zookeeper/log  
 
  kafka:
    image: confluentinc/cp-server:7.0.1
      # image: confluentinc/cp-enterprise-kafka:6.2.2
    hostname: kafka
    container_name: kafka
    user: root
      #pull_policy: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
        # - "8081:8081"
        # full config by var env
    environment:
      KAFKA_HEAP_OPTS: '-Xms1g -Xmx1g' # that will create 1GB heaps, should 4GB for prod
      KAFKA_BROKER_ID: -1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: |
        PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: |
        PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      LOG_DIR: /var/log/kafka
      KAFKA_DATA_DIR: /var/lib/kafka
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: "false" 
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 30s
      timeout: 10s
      retries: 4
    volumes:
      #  - ./config/server.properties:/etc/kafka/server.properties # if use config file
      - ./kafka/kafka-data:/var/lib/kafka/data
      - ./kafka/kafka-log:/var/log/kafka

  schema-registry:
    image: confluentinc/cp-schema-registry:7.1.0
    hostname: schema-registry
    container_name: schema-registry
    user: root
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: nc -z localhost 8081 || exit -1 
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 30s
    volumes:
      - ./kafka/registry:/etc/schema-registry

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: my-database
        # MONGO_INITDB_ROOT_USERNAME: admin
        # MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.0.1-1-ubi8
    ports:
      - "8083:8083"
    user: root
    environment:
      # Kafka Connect configuration
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_GROUP_ID: "connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: "my-connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "my-connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "my-connect-status"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
        #CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.protobuf.ProtobufConverter"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR,com.mongodb.kafka=DEBUG"
        # CONNECTORS: "MongoSource"
    command: 
      - bash
      - -c
      - |
        confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:1.7.0
        /etc/confluent/docker/run
    depends_on:
      kafka:
        condition: service_healthy     

        
