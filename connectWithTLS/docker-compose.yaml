version: '2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    user: root
      # pull_policy: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: "DEBUG"

    volumes:
      - ./kafka/zk-data:/var/lib/zookeeper/data
      - ./kafka/zk-logs:/var/lib/zookeeper/log  
 
  kafka:
    image: confluentinc/cp-server:7.0.1
    hostname: kafka
    container_name: kafka
    user: root
      #pull_policy: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
      - "29092:29092"
    environment:
      KAFKA_HEAP_OPTS: '-Xms1g -Xmx1g' # that will create 1GB heaps, should 4GB for prod
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: |
        PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: |
        PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/zookeeper_server_jaas.conf
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        # KAFKA_BROKER_ID: -1
        # KAFKA_ADVERTISED_LISTENERS=SSL: //localhost:9093
        # KAFKA_LISTENERS: SSL://:9093,SASL_SSL://:9094
        # KAFKA_SSL_KEY_PASSWORD: password
        # KAFKA_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka.truststore.jks
        # KAFKA_SSL_TRUSTSTORE_PASSWORD: password
        # KAFKA_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka.keystore.jks
        # KAFKA_SSL_KEYSTORE_PASSWORD: password
        # KAFKA_SSL_CLIENT_AUTH: required
        # KAFKA_SASL_MECHANISM: PLAIN
        # security.inter.broker.protocol=SSL # should be
        # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        # KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
        # KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 2
        # KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
        # LOG_DIR: /var/log/kafka
        # KAFKA_DATA_DIR: /var/lib/kafka
        # CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
        # CONFLUENT_METRICS_ENABLE: 'false'
        # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
        # CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: "false"
        # healthcheck:
        #   test: ["CMD", "nc", "-vz", "localhost", "9092"]
        #   interval: 30s
        #   timeout: 10s
        #   retries: 4
    volumes:
      - ./kafka/kafka-data:/var/lib/kafka/data
      - ./kafka/kafka-log:/var/log/kafka
      - ./config/server.properties:/etc/kafka/server.properties


# version: '2'
# 
# # do not forget to create a kafka directory
# 
# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.3.2
#     hostname: zookeeper
#     container_name: zookeeper
#     user: root
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000
#         # ZOOKEEPER_CLIENT_CNXN_SOCKET: plain;plaintext:2181
#         # KAFKA_OPTS: -Djava.security.auth.login.config=/var/ssl/private/kafka_client_jaas.conf
#     volumes:
#       - ./kafka/zk-data:/var/lib/zookeeper/data
#       - ./kafka/zk-logs:/var/lib/zookeeper/log  
#         # - ./private:/var/ssl/private
#  
#   kafka:
#     image: confluentinc/cp-server:7.0.1
#     hostname: kafka
#     container_name: kafka
#     user: root
#     depends_on:
#       - zookeeper
#     ports:
#       - "9092:9092"
#       - "9093:9093"
#       - "9094:9094"
#         # - "29092:29092"
#     environment:
#       KAFKA_HEAP_OPTS: '-Xms1g -Xmx1g'
#       KAFKA_BROKER_ID: -1
#       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#         # KAFKA_ADVERTISED_LISTENERS=SSL: //localhost:9093
#         # KAFKA_LISTENERS: SSL://:9093,SASL_SSL://:9094
#         # KAFKA_SSL_CLIENT_AUTH: required
#         # KAFKA_SSL_KEYSTORE_LOCATION: /var/ssl/private/kafka.keystore.jks
#         # KAFKA_SSL_KEYSTORE_PASSWORD: password
#         # KAFKA_SSL_KEY_PASSWORD: password
#         # KAFKA_SSL_TRUSTSTORE_LOCATION: /var/ssl/private/kafka.truststore.jks
#         # KAFKA_SSL_TRUSTSTORE_PASSWORD: password
#         # KAFKA_SASL_MECHANISM: PLAIN
#         # KAFKA_OPTS: -Djava.security.auth.login.config=/var/ssl/private/kafka_server_jaas.conf
#         # KAFKA_CUSTOM_CONFIG: "authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer"
#         # KAFKA_SUPER_USERS: kafka
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: |
#         PLAINTEXT:PLAINTEXT,SSL:SSL
#       KAFKA_ADVERTISED_LISTENERS: |
#         PLAINTEXT://kafka:9092,SSL://kafka:9093
#       KAFKA_DEFAULT_REPLICATION_FACTOR: 1
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#       KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#         # KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
#       KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 2
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
#       LOG_DIR: /var/log/kafka
#       KAFKA_DATA_DIR: /var/lib/kafka
#       CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
#       CONFLUENT_METRICS_ENABLE: 'false'
#       CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
#       CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: "false"
#         # healthcheck:
#         #   test: ["CMD", "nc", "-vz", "localhost", "9092"]
#         #   interval: 30s
#         #   timeout: 10s
#         #   retries: 4
#     volumes:
#       - ./kafka/kafka-data:/var/lib/kafka/data
#       - ./kafka/kafka-log:/var/log/kafka
#         # - ./private:/var/ssl/private
# 
#         # - ./certs/server.pem:/etc/kafka/secrets/server.pem
#         # - ./certs/server-key.pem:/etc/kafka/secrets/server-key.pem
#         # - ./certs/ca.pem:/etc/kafka/secrets/ca.pem
# 
#         #  schema-registry:
#         #    image: confluentinc/cp-schema-registry:7.1.0
#         #    hostname: schema-registry
#         #    container_name: schema-registry
#         #    user: root
#         #    depends_on:
#         #      kafka:
#         #        condition: service_healthy
#         #    ports:
#         #      - "8081:8081"
#         #    environment:
#         #      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#         #      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
#         #      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
#         #    healthcheck:
#         #      test: nc -z localhost 8081 || exit -1 
#         #      interval: 10s
#         #      timeout: 5s
#         #      retries: 6
#         #      start_period: 30s
#         #    volumes:
#         #      - ./kafka/registry:/etc/schema-registry
#        
#




# =====================================================
# version: '3'
# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.3.2
#     container_name: zookeeper
#     hostname: zookeeper
#     user: root
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_SERVER_ID: 1
#       ZOOKEEPER_CLIENT_PORT: 2181
#     volumes:
#       - ./kafka/zk-data:/var/lib/zookeeper/data
#       - ./kafka/zk-logs:/var/lib/zookeeper/log  
# 
#   kafka-ssl:
#     # image: confluentinc/cp-server:7.0.1
#     image: confluentinc/cp-kafka:7.1.10
#     container_name: kafka-ssl
#     hostname: kafka-ssl
#     user: root
#     ports:
#       - "9092:9092"
#     depends_on:
#       - zookeeper
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#       KAFKA_ADVERTISED_LISTENERS: 'SSL://kafka-ssl:9092'
#       KAFKA_SSL_KEYSTORE_FILENAME: broker.keystore.jks
#       KAFKA_SSL_KEYSTORE_CREDENTIALS: cert_creds
#       KAFKA_SSL_KEY_CREDENTIALS: cert_creds
#       KAFKA_SSL_TRUSTSTORE_FILENAME: broker.truststore.jks
#       KAFKA_SSL_TRUSTSTORE_CREDENTIALS: cert_creds
#       KAFKA_SSL_CLIENT_AUTH: 'required'
#       KAFKA_SECURITY_PROTOCOL: SSL
#       KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#     volumes:
#       - ./secrets:/etc/kafka/secrets
#       - ./kafka/kafka-data:/var/lib/kafka/data
#       - ./kafka/kafka-log:/var/log/kafka



 
